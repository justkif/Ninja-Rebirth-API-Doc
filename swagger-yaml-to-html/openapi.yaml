openapi: 3.0.0
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: https://ninja-rebirth.onrender.com
paths:
  /{id}:
    get:
      tags:
        - ninja-controller
      operationId: getOne
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Ninja'
    put:
      tags:
        - ninja-controller
      operationId: updateOne
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ninja'
        required: true
      responses:
        '200':
          description: OK
    delete:
      tags:
        - ninja-controller
      operationId: deleteOne
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
  /login:
    post:
      tags:
        - user-controller
      operationId: loginUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JWT'
  /:
    get:
      tags:
        - ninja-controller
      operationId: getAll
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ninja'
    post:
      tags:
        - ninja-controller
      operationId: createOne
      parameters:
        - name: ninja
          in: query
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                picture:
                  type: string
                  format: binary
              required:
                - picture
      responses:
        '201':
          description: Created
  /search:
    get:
      tags:
        - ninja-controller
      operationId: getMany
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ninja'
components:
  schemas:
    Ninja:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        skill1:
          type: string
        skill2:
          type: string
        skill3:
          type: string
        skill4:
          type: string
        imageurl:
          type: string
      required:
        - imageurl
        - name
        - skill1
        - skill2
        - skill3
        - skill4
    User:
      type: object
      properties:
        id:
          type: integer
          format: int32
        username:
          type: string
        password:
          type: string
      required:
        - password
        - username
    JWT:
      type: object
      properties:
        username:
          type: string
        token:
          type: string
      required:
        - token
        - username
